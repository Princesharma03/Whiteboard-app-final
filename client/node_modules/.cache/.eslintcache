[{"/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/index.js":"1","/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/App.js":"2","/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/reportWebVitals.js":"3","/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/components/Welcome/Welcome.js":"4","/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/components/container/Container.jsx":"5","/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/components/board/Board.jsx":"6"},{"size":541,"mtime":1651374545230,"results":"7","hashOfConfig":"8"},{"size":403,"mtime":1651376481860,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1651046745000,"results":"10","hashOfConfig":"8"},{"size":1310,"mtime":1651422300517,"results":"11","hashOfConfig":"8"},{"size":2221,"mtime":1651418865258,"results":"12","hashOfConfig":"8"},{"size":3906,"mtime":1651422766164,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bir4m3",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/index.js",[],[],"/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/App.js",["34"],[],"\nimport './App.css';\nimport Container from './components/container/Container';\nimport Welcome from \"./components/Welcome/Welcome\";\nimport {Routes,Route,Navigate} from 'react-router-dom'\n\nfunction App() {\n  return (\n    \n      <Routes>\n        <Route path=\"\" element={<Welcome/>}/>\n        <Route path=\"/whiteboard/:room\" element={<Container/>}/>\n       \n\n      </Routes>\n   \n  );\n}\n\nexport default App;\n","/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/reportWebVitals.js",[],[],"/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/components/Welcome/Welcome.js",[],[],"/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/components/container/Container.jsx",["35"],[],"import React from 'react';\nimport Board from '../board/Board'\nimport { useParams } from \"react-router-dom\";\nimport { Clipboard2Plus } from \"react-bootstrap-icons\";\n\nimport { useState } from 'react';\nimport './style.css';\n// import io from 'socket.io-client';\n// const socket = io.connect(\"http://localhost:3000\");\n\n\nconst Container=()=>{\n    \n    const [color,setColor]=useState(\"#000000\");\n    const [size,setSize]=useState(\"5\");\n    const prams=useParams();\n    // socket.emit(\"canvas-data\",prams.room);\n\n    const changeColor=(event)=>{\n        setColor(event.target.value);\n    }\n    const changeSize=(event)=>{\n        setSize(event.target.value);\n    }\n    \n    const myFunction=() => {\n        navigator.clipboard.writeText(\"https://whiteboard-for-inno.herokuapp.com/whiteboard/\"+prams.room);\n    }\n\n\n\n\n\n\n    return(\n        <div className='container'>\n                           <div className='color-picker-container'>\n                               Select Brush Color : &nbsp;\n                               <input type=\"color\" value={color} onChange={changeColor} />\n                           </div>\n                           <div className='brushsize-container'>\n                               Select Brush size : &nbsp;\n                           <select value={size} onChange={setSize}> \n                               <option>5</option>\n                               <option>10</option>\n                               <option>15</option>\n                               <option>20</option>\n                               <option>25</option>\n                               <option>30</option>\n                           </select>\n                           </div>\n                           <div class=\"shareDiv\">\n                           <button className='sharebtn' onClick={myFunction}><Clipboard2Plus/></button>\n                           </div>\n\n\n                           {/* <input type='text' onChange={this.changeRoom.bind(this)}/> */}\n                           <div className='board-container'>\n                               <Board color={color} size={size} room={prams.room}></Board>\n                           </div>\n                       </div>\n\n    )\n    \n}\n\n\n\nexport default Container","/home/in528/Documents/whiteBoard-app/whiteboard-app/client/src/components/board/Board.jsx",["36","37"],[],{"ruleId":"38","severity":1,"message":"39","line":5,"column":22,"nodeType":"40","messageId":"41","endLine":5,"endColumn":30},{"ruleId":"38","severity":1,"message":"42","line":22,"column":11,"nodeType":"40","messageId":"41","endLine":22,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":99,"column":29,"nodeType":"45","messageId":"46","endLine":99,"endColumn":31},{"ruleId":"47","severity":1,"message":"48","line":111,"column":17,"nodeType":"49","endLine":111,"endColumn":60},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'changeSize' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]